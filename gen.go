package main

import (
	"embed"
	"io"
	"log"
	"os"
	"path/filepath"
	"strings"
)

var (
	//go:embed v*
	srcmath embed.FS
)

func main() {
	err := run()
	if err != nil {
		log.Fatal(err)
	}
	log.Println("generated files")
}

func run() error {
	const mainVersion = "v4.6-core"
	const mainVersionDir = mainVersion + "/glgl"
	files, err := srcmath.ReadDir(mainVersionDir)
	if err != nil {
		return err
	}
	version := "v4.1-core"
	versionDir := version + "/glgl"
	os.RemoveAll(versionDir)
	err = os.MkdirAll(versionDir, 0777)
	if err != nil {
		return err
	}
	for _, file := range files {
		src, err := srcmath.Open(filepath.Join(mainVersionDir, file.Name()))
		if err != nil {
			return err
		}
		filename := file.Name()

		dst, err := os.Create(filepath.Join(versionDir, filename))
		if err != nil {
			return err
		}
		defer dst.Close()
		b, err := io.ReadAll(src)
		if err != nil {
			return err
		}

		repr := strings.NewReplacer(
			mainVersion, version,
		)
		dst.WriteString(`// DO NOT EDIT.
// This file was generated automatically
// from gen.go. Please do not edit this file.

`)
		_, err = repr.WriteString(dst, string(b))
		if err != nil {
			return err
		}
	}

	return nil
}
